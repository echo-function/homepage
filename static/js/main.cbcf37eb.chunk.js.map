{"version":3,"sources":["background.js","Calendar.jsx","WelcomeText.jsx","LastFmHandler.jsx","Searchbar.jsx","SearchbarList.jsx","List.jsx","App.js","registerServiceWorker.js","index.js"],"names":["window","addEventListener","canvas","document","getElementById","e","this","myCanvas","getContext","ctx","w","width","innerWidth","h","height","innerHeight","yPositions","Array","join","split","runMatrix","Game_Interval","clearInterval","Game_interval","setInterval","drawScreen","fillStyle","fillRect","color","colorSettings","matrixRain","font","map","y","index","text","String","fromCharCode","Math","random","x","fillText","canvasApp","require","Calendar","state","curDay","curDate","curTime","tick","setState","moment","format","intervalID","className","React","Component","WelcomeText","props","textTD","parsedData","welcomeText","name","colorFlash","nameColorFlash","nameColorFill","colorOutline","nameColorOutline","id","preserveAspectRatio","viewBox","style","stroke","textAnchor","alignmentBaseline","attributeName","from","to","dur","fill","values","begin","LastfmHandler","setSongInfoToState","a","getRecentlyPlayed","Object","curOBJ","recenttracks","track","curArtist","artist","curSong","curAlbum","album","fetch","username","apikey","then","respone","json","lastfm","activate","relInfoList","class","Searchbar","openSearchedPage","bind","focusedAnimation","unfocusedAnimation","sleep","keyPress","searchTag","searchTags","searchValues","searchInfo","searchValue","keys","self","location","replace","some","key","theTextbox","keyCode","console","log","includes","value","slice","placeholder","searchBar","infoList","textBars","getElementsByClassName","svgContainer","display","opacity","i","length","revTextBars","call","reverse","ms","Promise","resolve","setTimeout","autoComplete","type","onBlur","onFocus","onKeyUp","SearchbarList","mapObject","SearchbarListItem","List","catCircBG","categoryCircleBackground","catCircText","categoryCircleText","categories","backgroundColor","toUpperCase","details","Item","href","App","validatedData","JSON","stringify","data","parse","object","callback","title","Matrixbackground","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","URL","process","origin","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cbcf37eb.chunk.js","sourcesContent":["window.addEventListener('load', eventWindowLoaded, false);\nvar color = require('./website.json');\n\nfunction eventWindowLoaded() {\n  canvasApp();\n}\n\nfunction canvasSupport(e) {\n  return !!e.getContext;\n}\n\nfunction canvasApp() {\n  var canvas = document.getElementById(\"myCanvas\");\n  if (!canvasSupport(this.myCanvas)) {\n    return;\n  }\n  var ctx = canvas.getContext('2d');\n  var w = canvas.width = window.innerWidth;\n  var h = canvas.height = window.innerHeight;\n  var yPositions = Array(275).join(0).split('');\n\n  function runMatrix() {\n    if (typeof this.Game_Interval !== 'undefined') clearInterval(this.Game_interval);\n    this.Game_Interval = setInterval(drawScreen, 45);\n  }\n\n  function drawScreen() {\n    ctx.fillStyle = 'rgba(0,0,0,.07)';\n    ctx.fillRect(0, 0, w, h);\n    ctx.fillStyle = color.colorSettings.matrixRain;\n    ctx.font = '10px Georgia';\n    yPositions.map(function (y, index) {\n      this.text = String.fromCharCode(100 + Math.random() * 33);\n      this.x = (index * 10);\n      ctx.fillText(this.text, this.x, y);\n      if (y > 100 + Math.random() * 30000) {\n        yPositions[index] = 0;\n      } else {\n        yPositions[index] = y + 10;\n      }\n    })\n  }\n  runMatrix();\n}","import React from 'react';\nimport moment from 'moment';\n\n\nclass Calendar extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            curDay: \"\",\n            curDate: \"\",\n            curTime: \"\"\n        }\n    }\n    componentWillMount() {\n        this.tick();\n    }\n\n    componentDidMount() {\n        setInterval(() => {\n            this.tick();\n        }, 1000)\n    }\n\n    tick() {\n        this.setState({\n            curDay: moment().format('dddd'),\n            curDate: moment().format('MMMM Do YYYY'),\n            curTime: moment().format('h:mm:ss a')\n        })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    render() {\n        return (\n            <p className=\"info-text\">{this.state.curDay} <br /> {this.state.curDate} <br /> {this.state.curTime} </p>\n        );\n    }\n}\n\nexport default Calendar;","import React from 'react';\n\nclass WelcomeText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textTD = \"Welcome \" + this.props.parsedData.welcomeText.name;\n        this.colorFlash = this.props.parsedData.colorSettings.nameColorFlash + \";\" + this.props.parsedData.colorSettings.nameColorFill;\n        this.colorOutline = this.props.parsedData.colorSettings.nameColorOutline;\n    }\n\n    render() {\n        return (\n            <svg id=\"animationHolder\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 66 100\">\n                <text id=\"animationText\" style={{ stroke: this.colorOutline }} textAnchor=\"middle\" alignmentBaseline=\"middle\" x=\"50%\" y=\"50%\">{this.textTD}\n                    <animate id=\"outlineAnimation\" attributeName=\"stroke-dashoffset\" from=\"1000\" to=\"600\" dur=\"5.5s\" fill=\"freeze\" />\n\n                    <animate attributeName=\"fill\" values={this.colorFlash} begin=\"outlineAnimation.end - 0.5\" dur=\"1s\" fill=\"freeze\" />\n                </text>\n            </svg>\n        );\n    }\n}\n\nexport default WelcomeText;","import React from 'react';\n\nclass LastfmHandler extends React.Component {\n    constructor(props) {\n        super(props);\n        this.username = Object.values(this.props.parsedData.lastfm)[0];\n        this.apikey = Object.values(this.props.parsedData.lastfm)[1];\n        this.activate = Object.values(this.props.parsedData.lastfm)[2];\n        this.relInfoList = [\"\", \"\", \"\"];\n\n        this.state = {\n            curArtist: \"\",\n            curSong: \"\",\n            curAlbum: \"\",\n            curOBJ: \"\"\n        }\n    }\n\n    componentWillMount() {\n        if (this.activate === \"true\") {\n            this.setSongInfoToState();\n        }\n    }\n    componentDidMount() {\n        if (this.activate === \"true\") {\n            setInterval(() => {\n                this.setSongInfoToState();\n            }, 5000)\n        }\n    }\n    setSongInfoToState = async () => {\n        await this.getRecentlyPlayed();\n        try {\n            if (Object.values(this.state.curOBJ.recenttracks.track[0][\"@attr\"])[0] === \"true\") {\n                this.setState({\n                    curArtist: Object.values(this.state.curOBJ.recenttracks.track[0].artist[\"#text\"]),\n                    curSong: Object.values(this.state.curOBJ.recenttracks.track[0].name),\n                    curAlbum: Object.values(this.state.curOBJ.recenttracks.track[0].album[\"#text\"])\n                });\n            }\n        }\n        catch (e) {\n            this.setState({\n                curArtist: \"No song scrobbling\",\n                curSong: \"\",\n                curAlbum: \"\"\n            })\n        }\n    }\n\n    getRecentlyPlayed = async () => {\n        await fetch(\"https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=\" + this.username + \"&api_key=\" + this.apikey + \"&format=json\").then(respone => respone.json()).then(json => {\n            this.setState({\n                curOBJ: json\n            });\n        })\n    }\n\n    render() {\n        return (\n            <div id=\"music-holder\">\n                <p class=\"info-text\" id=\"music-text\">{this.state.curArtist}<br />{this.state.curSong}<br />{this.state.curAlbum}</p>\n            </div>\n        );\n    }\n}\n\nexport default LastfmHandler;\n\n","import React from 'react';\n\nclass Searchbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openSearchedPage = this.openSearchedPage.bind(this);\n        this.focusedAnimation = this.focusedAnimation.bind(this);\n        this.unfocusedAnimation = this.unfocusedAnimation.bind(this);\n        this.sleep = this.sleep.bind(this);\n        this.keyPress = this.keyPress.bind(this);\n        this.searchTag = \"\";\n        this.searchTags = Object(this.props.parsedData.searchValues.searchTags);\n        this.searchInfo = Object(this.props.parsedData.searchValues.searchInfo);\n    }\n\n    openSearchedPage(searchValue) {\n        var keys = Object.keys(this.props.parsedData.searchValues.searchTags)\n        var self = this;\n        if (this.searchTag === \"\") {\n            window.location.replace(\"https://www.google.com/search?q=\" + searchValue);\n            return true;\n        }\n        keys.some((key) => {\n            if (self.searchTag === key) {\n                window.location.replace(this.props.parsedData.searchValues.searchTags[key] + searchValue);\n                return true;\n            }\n        });\n    }\n\n    keyPress(e) {\n        var theTextbox = document.getElementById(\"search-bar\");\n\n        if (e.keyCode === 32) {\n\n            console.log(this.searchTags);\n            if (Object.keys(this.searchTags).includes(theTextbox.value.slice(0, -1))) {\n                this.searchTag = theTextbox.value.slice(0, -1);\n                theTextbox.placeholder = this.searchInfo[theTextbox.value.slice(0, -1)];\n                theTextbox.value = \"\";\n            }\n        }\n\n        if (e.key === 'Enter') {\n            this.openSearchedPage(document.getElementById(\"search-bar\").value);\n        }\n    }\n\n    async focusedAnimation(e) {\n        var searchBar = document.getElementById(\"search-bar\");\n        var infoList = document.getElementById(\"search-info-container\");\n        var textBars = document.getElementsByClassName(\"search-info-desc\");\n        var svgContainer = document.getElementById(\"animationHolder\");\n\n        searchBar.style.height = '40px';\n        infoList.style.display = 'flex';\n        svgContainer.style.opacity = '0';\n\n        for (var i = 0; i < textBars.length; i++) {\n            await this.sleep(50);\n            textBars[i].style.opacity = '1';\n        }\n    }\n\n    async unfocusedAnimation(e) {\n        var searchBar = document.getElementById(\"search-bar\");\n        var infoList = document.getElementById(\"search-info-container\");\n        var textBars = document.getElementsByClassName(\"search-info-desc\");\n        var revTextBars = [].slice.call(textBars, 0).reverse()\n        var svgContainer = document.getElementById(\"animationHolder\");\n\n\n        for (var i = 0; i < textBars.length; i++) {\n            await this.sleep(50);\n            revTextBars[i].style.opacity = '0';\n        }\n        await this.sleep(200);\n        infoList.style.display = 'none';\n        await this.sleep(50);\n        searchBar.style.height = '30px';\n        svgContainer.style.opacity = '1';\n    }\n\n    sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    render() {\n        return (\n            <div id=\"search-bar-container\">\n                <input autoComplete=\"off\" type=\"text\" id=\"search-bar\" onBlur={this.unfocusedAnimation} onFocus={this.focusedAnimation} onKeyUp={this.keyPress} placeholder=\"Search something...\" />\n            </div>\n        );\n    }\n}\n\nexport default Searchbar;","import React from 'react';\n\nclass SearchbarList extends React.Component {\n    render() {\n        return (\n            <div id=\"search-info-container\">\n                <ul id=\"search-info-list\">\n                    <li className=\"search-info-desc\"><center>Change Search: Type 2 Character Code Followed By a Space</center></li>\n                    <SearchbarListItem parsedData={this.props.parsedData} mapObject={this.props.mapObject} />\n                </ul>\n            </div>\n        );\n    }\n}\nexport default SearchbarList;\n\nclass SearchbarListItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            this.props.mapObject(this.props.parsedData.searchValues.searchInfo, function (key, value) {\n                return <li class=\"search-info-desc\"><span class=\"search-info-tag\">{key}</span>{value}</li>;\n            })\n        );\n    }\n}","import React from 'react';\n\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.catCircBG = this.props.parsedData.colorSettings.categoryCircleBackground;\n        this.catCircText = this.props.parsedData.colorSettings.categoryCircleText;\n    }\n    render() {\n        return (\n            this.props.mapObject(this.props.parsedData.categories, (key, value) => {\n                return (\n                    <div id=\"dropdown\">\n                        <div id=\"category-cirle\" style={{ backgroundColor: this.catCircBG, color: this.catCircText }}><center>{key[0].toUpperCase() + key[1]}</center></div>\n                        <div id=\"dropdown-content\">\n                            <Item key={key} mapObject={this.props.mapObject} details={this.props.parsedData.categories[key]} />\n                        </div>\n                    </div>\n                );\n            })\n        );\n    }\n}\n\nexport default List;\n\nclass Item extends React.Component {\n    render() {\n        return (\n            this.props.mapObject(this.props.details, function (key, value) {\n                return <li><a href={value}>{key}</a></li>;\n            })\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport data from \"./website.json\";\nimport \"./background.js\";\n\nimport Calendar from './Calendar.jsx';\nimport WelcomeText from './WelcomeText.jsx';\nimport LastfmHandler from './LastFmHandler';\nimport Searchbar from './Searchbar';\nimport SearchbarList from './SearchbarList';\nimport List from './List';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.mapObject = this.mapObject.bind(this);\n    this.validatedData = JSON.stringify(data);\n    this.parsedData = JSON.parse(this.validatedData);\n  }\n\n  mapObject(object, callback) {\n    return Object.keys(object).map(function (key) {\n      return callback(key, object[key]);\n    });\n  }\n\n  componentWillMount() {\n    document.title = \"Welcome \" + Object.values(this.parsedData.welcomeText)[0];\n  }\n  render() {\n    return (\n      <div id=\"body\">\n        <div id=\"mainContainerParent\">\n          <WelcomeText parsedData={this.parsedData} />\n          <div id=\"mainContainer\">\n            <Searchbar parsedData={this.parsedData} />\n            <SearchbarList parsedData={this.parsedData} mapObject={this.mapObject.bind(this)} />\n            <div id=\"dropdownContainer\"> <List data={data} mapObject={this.mapObject.bind(this)} parsedData={this.parsedData} /> </div>\n          </div>\n        </div>\n        <div id=\"info-holder\">\n          <Calendar />\n          <LastfmHandler parsedData={this.parsedData} />\n        </div>\n        <Matrixbackground />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nclass Matrixbackground extends React.Component {\n  render() {\n    return (\n      <canvas id=\"myCanvas\"></canvas>\n    );\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}